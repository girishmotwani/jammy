# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .resource_py3 import Resource


class AzureFirewall(Resource):
    """Azure Firewall resource.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :param id: Resource ID.
    :type id: str
    :ivar name: Resource name.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    :param location: Resource location.
    :type location: str
    :param tags: Resource tags.
    :type tags: dict[str, str]
    :param application_rule_collections: Collection of application rule
     collections used by Azure Firewall.
    :type application_rule_collections:
     list[~azurefirewall.models.AzureFirewallApplicationRuleCollection]
    :param nat_rule_collections: Collection of NAT rule collections used by
     Azure Firewall.
    :type nat_rule_collections:
     list[~azurefirewall.models.AzureFirewallNatRuleCollection]
    :param network_rule_collections: Collection of network rule collections
     used by Azure Firewall.
    :type network_rule_collections:
     list[~azurefirewall.models.AzureFirewallNetworkRuleCollection]
    :param ip_configurations: IP configuration of the Azure Firewall resource.
    :type ip_configurations:
     list[~azurefirewall.models.AzureFirewallIPConfiguration]
    :param management_ip_configuration: IP configuration of the Azure Firewall
     used for management traffic.
    :type management_ip_configuration:
     ~azurefirewall.models.AzureFirewallIPConfiguration
    :ivar provisioning_state: The provisioning state of the Azure firewall
     resource. Possible values include: 'Succeeded', 'Updating', 'Deleting',
     'Failed'
    :vartype provisioning_state: str or
     ~azurefirewall.models.ProvisioningState
    :param threat_intel_mode: The operation mode for Threat Intelligence.
     Possible values include: 'Alert', 'Deny', 'Off'
    :type threat_intel_mode: str or
     ~azurefirewall.models.AzureFirewallThreatIntelMode
    :param virtual_hub: The virtualHub to which the firewall belongs.
    :type virtual_hub: ~azurefirewall.models.SubResource
    :param firewall_policy: The firewallPolicy associated with this azure
     firewall.
    :type firewall_policy: ~azurefirewall.models.SubResource
    :param hub_ip_addresses: IP addresses associated with AzureFirewall.
    :type hub_ip_addresses: ~azurefirewall.models.HubIPAddresses
    :ivar ip_groups: IpGroups associated with AzureFirewall.
    :vartype ip_groups: list[~azurefirewall.models.AzureFirewallIpGroups]
    :param sku: The Azure Firewall Resource SKU.
    :type sku: ~azurefirewall.models.AzureFirewallSku
    :param additional_properties: The additional properties used to further
     config this azure firewall.
    :type additional_properties: dict[str, str]
    :param zones: A list of availability zones denoting where the resource
     needs to come from.
    :type zones: list[str]
    :ivar etag: A unique read-only string that changes whenever the resource
     is updated.
    :vartype etag: str
    """

    _validation = {
        'name': {'readonly': True},
        'type': {'readonly': True},
        'provisioning_state': {'readonly': True},
        'ip_groups': {'readonly': True},
        'etag': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'location': {'key': 'location', 'type': 'str'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'application_rule_collections': {'key': 'properties.applicationRuleCollections', 'type': '[AzureFirewallApplicationRuleCollection]'},
        'nat_rule_collections': {'key': 'properties.natRuleCollections', 'type': '[AzureFirewallNatRuleCollection]'},
        'network_rule_collections': {'key': 'properties.networkRuleCollections', 'type': '[AzureFirewallNetworkRuleCollection]'},
        'ip_configurations': {'key': 'properties.ipConfigurations', 'type': '[AzureFirewallIPConfiguration]'},
        'management_ip_configuration': {'key': 'properties.managementIpConfiguration', 'type': 'AzureFirewallIPConfiguration'},
        'provisioning_state': {'key': 'properties.provisioningState', 'type': 'str'},
        'threat_intel_mode': {'key': 'properties.threatIntelMode', 'type': 'str'},
        'virtual_hub': {'key': 'properties.virtualHub', 'type': 'SubResource'},
        'firewall_policy': {'key': 'properties.firewallPolicy', 'type': 'SubResource'},
        'hub_ip_addresses': {'key': 'properties.hubIPAddresses', 'type': 'HubIPAddresses'},
        'ip_groups': {'key': 'properties.ipGroups', 'type': '[AzureFirewallIpGroups]'},
        'sku': {'key': 'properties.sku', 'type': 'AzureFirewallSku'},
        'additional_properties': {'key': 'properties.additionalProperties', 'type': '{str}'},
        'zones': {'key': 'zones', 'type': '[str]'},
        'etag': {'key': 'etag', 'type': 'str'},
    }

    def __init__(self, *, id: str=None, location: str=None, tags=None, application_rule_collections=None, nat_rule_collections=None, network_rule_collections=None, ip_configurations=None, management_ip_configuration=None, threat_intel_mode=None, virtual_hub=None, firewall_policy=None, hub_ip_addresses=None, sku=None, additional_properties=None, zones=None, **kwargs) -> None:
        super(AzureFirewall, self).__init__(id=id, location=location, tags=tags, **kwargs)
        self.application_rule_collections = application_rule_collections
        self.nat_rule_collections = nat_rule_collections
        self.network_rule_collections = network_rule_collections
        self.ip_configurations = ip_configurations
        self.management_ip_configuration = management_ip_configuration
        self.provisioning_state = None
        self.threat_intel_mode = threat_intel_mode
        self.virtual_hub = virtual_hub
        self.firewall_policy = firewall_policy
        self.hub_ip_addresses = hub_ip_addresses
        self.ip_groups = None
        self.sku = sku
        self.additional_properties = additional_properties
        self.zones = zones
        self.etag = None

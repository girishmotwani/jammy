# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.0.6349, generator: {generator})
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum
from six import with_metaclass
from azure.core import CaseInsensitiveEnumMeta


class AzureFirewallThreatIntelMode(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """The operation mode for Threat Intel.
    """

    ALERT = "Alert"
    DENY = "Deny"
    OFF = "Off"

class Enum7(with_metaclass(CaseInsensitiveEnumMeta, int, Enum)):
    """The current mode enforced, 0 - Disabled, 1 - Alert, 2 -Deny
    """

    ZERO = 0
    ONE = 1
    TWO = 2

class Enum8(with_metaclass(CaseInsensitiveEnumMeta, int, Enum)):
    """Describes the severity of signature: 1 - Low, 2 - Medium, 3 - High
    """

    ONE = 1
    TWO = 2
    THREE = 3

class Enum9(with_metaclass(CaseInsensitiveEnumMeta, int, Enum)):
    """Describes in which direction signature is being enforced: 0 - Inbound, 1 - OutBound, 2 -
    Bidirectional
    """

    ZERO = 0
    ONE = 1
    TWO = 2

class FirewallPolicyFilterRuleCollectionActionType(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """The action type of a rule.
    """

    ALLOW = "Allow"
    DENY = "Deny"

class FirewallPolicyIntrusionDetectionProtocol(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """Possible intrusion detection bypass traffic protocols.
    """

    TCP = "TCP"
    UDP = "UDP"
    ICMP = "ICMP"
    ANY = "ANY"

class FirewallPolicyIntrusionDetectionStateType(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """Possible state values.
    """

    OFF = "Off"
    ALERT = "Alert"
    DENY = "Deny"

class FirewallPolicyNatRuleCollectionActionType(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """The action type of a rule.
    """

    DNAT = "DNAT"

class FirewallPolicyRuleApplicationProtocolType(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """The application protocol type of a Rule.
    """

    HTTP = "Http"
    HTTPS = "Https"

class FirewallPolicyRuleCollectionType(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """The type of the rule collection.
    """

    FIREWALL_POLICY_NAT_RULE_COLLECTION = "FirewallPolicyNatRuleCollection"
    FIREWALL_POLICY_FILTER_RULE_COLLECTION = "FirewallPolicyFilterRuleCollection"

class FirewallPolicyRuleNetworkProtocol(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """The Network protocol of a Rule.
    """

    TCP = "TCP"
    UDP = "UDP"
    ANY = "Any"
    ICMP = "ICMP"

class FirewallPolicyRuleType(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """Rule Type.
    """

    APPLICATION_RULE = "ApplicationRule"
    NETWORK_RULE = "NetworkRule"
    NAT_RULE = "NatRule"

class FirewallPolicySkuTier(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """Tier of Firewall Policy.
    """

    STANDARD = "Standard"
    PREMIUM = "Premium"
    BASIC = "Basic"

class OrderByOrder(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """Describes if results should be in ascending/descending order
    """

    ASCENDING = "Ascending"
    DESCENDING = "Descending"

class ProvisioningState(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """The current provisioning state.
    """

    SUCCEEDED = "Succeeded"
    UPDATING = "Updating"
    DELETING = "Deleting"
    FAILED = "Failed"

class ResourceIdentityType(with_metaclass(CaseInsensitiveEnumMeta, str, Enum)):
    """The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes
    both an implicitly created identity and a set of user assigned identities. The type 'None' will
    remove any identities from the virtual machine.
    """

    SYSTEM_ASSIGNED = "SystemAssigned"
    USER_ASSIGNED = "UserAssigned"
    SYSTEM_ASSIGNED_USER_ASSIGNED = "SystemAssigned, UserAssigned"
    NONE = "None"

{
	"properties": {
		"mode": "Incremental",
		"debugSetting": {
				"detailLevel": "requestContent, responseContent"
		},
    "template": {	
			"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
			"contentVersion": "1.0.0.0",
			"parameters": {
				"virtualNetworkName": {
					"type": "string",
					"defaultValue": "test-vnet",
					"metadata": {
						"description": "virtual network name"
					}
				},
				"adminUsername": {
					"type": "string",
					"defaultValue": "gsauser",
					"metadata": {
						"description": "Admin username for the servers"
					}
				},
				"location": {
					"type": "string",
					"defaultValue": "[resourceGroup().location]",
					"metadata": {
						"description": "Location for all resources."
					}
				},
				"vmSize": {
					"type": "string",
					"defaultValue": "Standard_DS1_v2",
					"metadata": {
						"description": "Size of the virtual machine."
					}
				},
				"authenticationType": {
					"type": "string",
					"defaultValue": "sshPublicKey",
					"allowedValues": [
						"sshPublicKey",
						"password"
					],
					"metadata": {
						"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
					}
				},
				"adminPasswordOrKey": {
					"type": "securestring",
					"defaultValue": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCpaQl5ASt0FlPjPoMDabG1QJHM5EIoMOGq+FlpHcTEsGrP5Cu1MdLr6/l84qs4Q7TsZ1JO1pAqEAn5lo2ZRhSlt+Afa/J6OatqlTWl50wYh5DPptSCLdXkIcMIr2GqvrlZQWPppLDMzIRxf1ILjKAV1UYNCyS+Qk5sA2dMry/ZZ3pSGLpukH7+N9X0hLR665iCvoZ/vku5hUbYMVKtmqODowaHjRzksAooqM9d3iz3MSqGRcW21qjC23Ooc/tfFnHl+wngsCkWRO5KXwuM4GtS1tAzLkL1xB7bJprYij9u5JYZKt7fzvKWD/7KbTFGnXEOpqAsElaDTYNOqRqh1mp87QEVPdhgAvsgJDJk76XBg7A8dJqfb3YxPsK/7LWB7YHreprf+wr7q/tat0Vj46df0+X4ocxX2xjEh8JjDVlPQXpFKmqtAop1Ls5fV3bwCZJ2pvhF5zeC7hMvlK54cmJkIz4YwOTG8zi52o1E97yI6Wc0dGmnRF+O7LRARJKJIq0= generated-by-azure",
					"metadata": {
						"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
					}
				}
	  	},
			"variables": {
				"vnetAddressPrefix": "10.0.0.0/16",
				"clientSubnetPrefix": "10.0.2.0/24",
				"serverSubnetPrefix": "10.0.3.0/24",
				"jumpboxSubnetPrefix": "10.0.0.0/24",
				"jumpboxPrivateIp": "10.0.0.4",
				"nextHopIP": "10.0.1.4",
				"jumpBoxSubnetName": "JumpboxSubnet",
				"clientSubnetName": "ClientSubnet",
				"serverSubnetName": "ServerSubnet",
				"jumpBoxPublicIPAddressName": "JumpHostPublicIP",
				"jumpBoxNicName": "JumpHostNic",
				"jumpBoxSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), variables('jumpBoxSubnetName'))]",
				"clientNicName": "ClientNic",
				"clientPrivateIp": "10.0.2.4",
				"clientSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), variables('clientSubnetName'))]",
				"serverNicName": "ServerNic",
				"serverPrivateIp": "10.0.3.4",
				"serverSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), variables('serverSubnetName'))]",
				"storageAccountName": "[concat(uniquestring(resourceGroup().id), 'sajumpbox')]",
				"azfwRouteTableName": "AzfwRouteTable",
				"firewallName": "firewall1",
				"publicIPNamePrefix": "publicIP",
				"linuxConfiguration": {
					"disablePasswordAuthentication": true,
					"ssh": {
						"publicKeys": [
							{
								"path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
								"keyData": "[parameters('adminPasswordOrKey')]"
							}
						]
					}
				},
				"networkSecurityGroupName": "[concat(variables('clientSubnetName'), '-nsg')]"
			},
	  	"resources": [
				{
					"type": "Microsoft.Storage/storageAccounts",
					"name": "[variables('storageAccountName')]",
					"apiVersion": "2019-06-01",
					"location": "[parameters('location')]",
					"sku": {
						"name": "Standard_LRS"
					},
					"kind": "Storage",
					"properties": {}
				},
    		{
		    "type": "Microsoft.Network/virtualWans",
			  "apiVersion": "2021-08-01",
			  "name": "VWan-01",
			  "location": "[parameters('location')]",
			  "properties": {
				  "disableVpnEncryption": false,
				  "allowBranchToBranchTraffic": true,
				  "type": "Standard"
		 	  }
	    },
			{
			  "type": "Microsoft.Network/virtualHubs",
				"apiVersion": "2021-08-01",
				"name": "Hub-01",
				"location": "[parameters('location')]",
				"properties": {
					"addressPrefix": "10.1.0.0/16",
					"virtualWan": {
						"id": "[resourceId('Microsoft.Network/virtualWans', 'VWan-01')]"
					}
				},
				"dependsOn": [
				  "[resourceId('Microsoft.Network/virtualWans', 'VWan-01')]"
				]
			},
			{
			  "type": "Microsoft.Network/virtualHubs/hubVirtualNetworkConnections",
				"apiVersion": "2021-08-01",
				"name": "[format('{0}/{1}', 'Hub-01', 'hub-spoke')]",
				"properties": {
					"remoteVirtualNetwork": {
				 		"id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
					},
					"allowHubToRemoteVnetTransit": true,
					"allowRemoteVnetToUseHubVnetGateways": false,
					"enableInternetSecurity": true,
					"routingConfiguration": {
						"associatedRouteTable": {
							"id": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', 'Hub-01', 'RT_VNet')]"
						},
						"propagatedRouteTables": {
							"labels": [
								"VNet"
							],
							"ids": [
				  			{
									"id": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', 'Hub-01', 'RT_VNet')]"
								}
							]
					  }
					}
				},
				"dependsOn": [
					"[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', 'Hub-01', 'RT_VNet')]",
					"[resourceId('Microsoft.Network/virtualHubs', 'Hub-01')]",
					"[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
				]
			},
			{
				"type": "Microsoft.Network/firewallPolicies",
				"apiVersion": "2021-08-01",
				"name": "Policy-01",
				"location": "[parameters('location')]",
					"properties": {
						"threatIntelMode": "Alert"
					}
			},
			{
				"type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
				"apiVersion": "2021-08-01",
				"name": "[format('{0}/{1}', 'Policy-01', 'DefaultApplicationRuleCollectionGroup')]",
				"properties": {
					"priority": 300,
					"ruleCollections": [
						{
							"ruleCollectionType": "FirewallPolicyFilterRuleCollection",
							"name": "RC-01",
							"priority": 100,
							"action": {
								"type": "Allow"
							},
							"rules": [
								{
									"ruleType": "ApplicationRule",
									"name": "Allow-msft",
										"sourceAddresses": [
												"*"
										],
									"protocols": [
										{
											"port": 80,
											"protocolType": "Http"
										},
										{
											"port": 443,
												"protocolType": "Https"
										}
									],
									"targetFqdns": [
										"*.microsoft.com"
									]
								}
							]
						}
					]
				},
				"dependsOn": [
					"[resourceId('Microsoft.Network/firewallPolicies', 'Policy-01')]"
				]
			},
			{
				"type": "Microsoft.Network/azureFirewalls",
				"apiVersion": "2021-08-01",
				"name": "AzfwTest",
				"location": "[parameters('location')]",
				"properties": {
					"sku": {
					  "name": "AZFW_Hub",
						"tier": "Standard"
					},
					"hubIPAddresses": {
						"publicIPs": {
							"count": 1
						}
					},
					"virtualHub": {
						"id": "[resourceId('Microsoft.Network/virtualHubs', 'Hub-01')]"
					},
					"firewallPolicy": {
						"id": "[resourceId('Microsoft.Network/firewallPolicies', 'Policy-01')]"
					}
				},
				"dependsOn": [
					"[resourceId('Microsoft.Network/firewallPolicies', 'Policy-01')]",
					"[resourceId('Microsoft.Network/virtualHubs', 'Hub-01')]"
				]
			},
			{
				"type": "Microsoft.Network/virtualNetworks",
				"apiVersion": "2021-08-01",
				"name": "[parameters('virtualNetworkName')]",
				"location": "[parameters('location')]",
				"properties": {
					"addressSpace": {
						"addressPrefixes": [
							"[variables('vnetAddressPrefix')]"
						]
					},
					"enableDdosProtection": false,
					"enableVmProtection": false,
					"subnets": [
						{
							"name": "[variables('jumpBoxSubnetName')]",
							"properties": {
								"addressPrefix": "[variables('jumpboxSubnetPrefix')]",
								"routeTable": {
									"id": "[resourceId('Microsoft.Network/routeTables', 'RT-01')]"
								}
							}
						},
						{
							"name": "[variables('clientSubnetName')]",
							"properties": {
								"addressPrefix": "[variables('clientSubnetPrefix')]"
							}
						}
					]
				}
			},
		    {
				"name": "[variables('jumpBoxPublicIPAddressName')]",
				"type": "Microsoft.Network/publicIPAddresses",
				"apiVersion": "2020-05-01",
				"location": "[parameters('location')]",
				"properties": {
					"publicIPAllocationMethod": "Dynamic"
				}
			},
			{
				"apiVersion": "2020-05-01",
				"type": "Microsoft.Network/networkInterfaces",
				"name": "[variables('ClientNicName')]",
				"location": "[parameters('location')]",
				"dependsOn": [
					"[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
				],
				"properties": {
					"ipConfigurations": [
						{
							"name": "ipconfig1",
							"properties": {
								"privateIPAllocationMethod": "Static",
								"privateIPAddress": "[variables('clientPrivateIp')]",
								"subnet": {
									"id": "[variables('clientSubnetId')]"
								}
							}
						}
					]
				}
			},
		  {
			  "apiVersion": "2020-05-01",
				"type": "Microsoft.Network/networkInterfaces",
				"name": "[variables('JumpBoxNicName')]",
				"location": "[parameters('location')]",
				"dependsOn": [
					"[resourceId('Microsoft.Network/publicIPAddresses', variables('jumpBoxPublicIPAddressName'))]",
					"[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
				],
				"properties": {
					"ipConfigurations": [
						{
							"name": "ipconfig1",
							"properties": {
								"privateIPAllocationMethod": "Static",
								"privateIPAddress": "[variables('jumpboxPrivateIp')]",
								"publicIPAddress": {
									"id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('jumpBoxPublicIPAddressName'))]"
								},
								"subnet": {
									"id": "[variables('jumpBoxSubnetId')]"
								}
							}
						}
					]
				}
			},
			{
				"type": "Microsoft.Compute/virtualMachines",
				"apiVersion": "2022-03-01",
				 "name": "JumpBox",
				"location": "[parameters('location')]",
				"properties": {
					"hardwareProfile": {
						"vmSize": "[parameters('vmSize')]"
					},
					"storageProfile": {
						"imageReference": {
							"publisher": "Canonical",
							"offer": "UbuntuServer",
							"sku": "18.04-LTS",
							"version": "latest"
						},
						"osDisk": {
						"createOption": "FromImage"
						}
					},
					"osProfile": {
						"computerName": "JumpBox",
						"adminUsername": "[parameters('adminUsername')]",
						"adminPassword": "[parameters('adminPasswordOrKey')]",
						"linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
					},
					"networkProfile": {
						"networkInterfaces": [
							{
								"id": "[resourceId('Microsoft.Network/networkInterfaces', variables('JumpBoxNicName'))]"
							}
						]
					},
					"diagnosticsProfile": {
						"bootDiagnostics": {
							"enabled": true,
							"storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))).primaryEndpoints.blob]"
						}
					}
				}
			},
			{
				"name": "Client",
				"type": "Microsoft.Compute/virtualMachines",
				"apiVersion": "2019-12-01",
				"location": "[parameters('location')]",
				"dependsOn": [
					"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
					"[resourceId('Microsoft.Network/networkInterfaces', variables('ClientNicName'))]"
				],
				"properties": {
					"hardwareProfile": {
						"vmSize": "[parameters('vmSize')]"
					},
					"storageProfile": {
						"imageReference": {
							"publisher": "Canonical",
							"offer": "UbuntuServer",
							"sku": "18.04-LTS",
							"version": "latest"
						},
						"osDisk": {
							"createOption": "FromImage"
						}
					},
					"osProfile": {
						"computerName": "Client",
						"adminUsername": "[parameters('adminUsername')]",
						"adminPassword": "[parameters('adminPasswordOrKey')]",
						"linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
					},
					"networkProfile": {
						"networkInterfaces": [
							{
								"id": "[resourceId('Microsoft.Network/networkInterfaces', variables('ClientNicName'))]"
							}
						]
					},
					"diagnosticsProfile": {
						"bootDiagnostics": {
							"enabled": true,
							"storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))).primaryEndpoints.blob]"
						}
					}
				}
			},
			{
				"type": "Microsoft.Network/routeTables",
				"apiVersion": "2021-08-01",
				"name": "RT-01",
				"location": "[parameters('location')]",
				"properties": {
					"disableBgpRoutePropagation": false,
					"routes": [
						{
							"name": "jump-to-inet",
							"properties": {
								"addressPrefix": "0.0.0.0/0",
								"nextHopType": "Internet"
							}
						}
					]
				}
			},
			{
				"type": "Microsoft.Network/virtualHubs/hubRouteTables",
				"apiVersion": "2021-08-01",
				"name": "[format('{0}/{1}', 'Hub-01', 'RT_VNet')]",
				"properties": {
					"routes": [
						{
							"name": "Workload-SNToFirewall",
							"destinationType": "CIDR",
							"destinations": [
								"10.0.1.0/24"
							],
							"nextHopType": "ResourceId",
							"nextHop": "[resourceId('Microsoft.Network/azureFirewalls', 'AzfwTest')]"
						},
						{
							"name": "InternetToFirewall",
							"destinationType": "CIDR",
							"destinations": [
								"0.0.0.0/0"
							],
							"nextHopType": "ResourceId",
							"nextHop": "[resourceId('Microsoft.Network/azureFirewalls', 'AzfwTest')]"
						}
					],
					"labels": [
						"VNet"
					]
				},
				"dependsOn": [
					"[resourceId('Microsoft.Network/azureFirewalls', 'AzfwTest')]",
					"[resourceId('Microsoft.Network/virtualHubs', 'Hub-01')]"
				]
			}
		]
	}
	}
}

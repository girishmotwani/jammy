{
	"properties": {
		"mode": "Incremental",
		"debugSetting": {
		       "detailLevel": "requestContent, responseContent"
		},	       
		"template": {
			"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
			"contentVersion": "1.0.0.0",
			"parameters": {
				"virtualNetworkName": {
					"type": "string",
					"defaultValue": "test-vnet",
					"metadata": {
						"description": "virtual network name"
					}
				},
				"adminUsername": {
					"type": "string",
					"defaultValue": "gsauser",
					"metadata": {
						"description": "Username for the Virtual Machine."
					}
				},
				"location": {
					"type": "string",
					"defaultValue": "[resourceGroup().location]",
					"metadata": {
						"description": "Location for all resources, the location must support Availability Zones if required."
					}
				},
				"vmSize": {
					"type": "string",
					"defaultValue": "Standard_DS1_v2",
					"metadata": {
						"description": "Size of the virtual machine."
					}
				},
				"numberOfFirewallPublicIPAddresses": {
					"type": "int",
					"defaultValue": 1,
					"minValue": 1,
					"maxValue": 100,
					"metadata": {
						"description": "Number of public IP addresses for the Azure Firewall"
					}
				},
				"authenticationType": {
					"type": "string",
					"defaultValue": "sshPublicKey",
					"allowedValues": [
						"sshPublicKey",
						"password"
					],
					"metadata": {
						"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
					}
				},
				"adminPasswordOrKey": {
					"type": "securestring",
					"defaultValue": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCpaQl5ASt0FlPjPoMDabG1QJHM5EIoMOGq+FlpHcTEsGrP5Cu1MdLr6/l84qs4Q7TsZ1JO1pAqEAn5lo2ZRhSlt+Afa/J6OatqlTWl50wYh5DPptSCLdXkIcMIr2GqvrlZQWPppLDMzIRxf1ILjKAV1UYNCyS+Qk5sA2dMry/ZZ3pSGLpukH7+N9X0hLR665iCvoZ/vku5hUbYMVKtmqODowaHjRzksAooqM9d3iz3MSqGRcW21qjC23Ooc/tfFnHl+wngsCkWRO5KXwuM4GtS1tAzLkL1xB7bJprYij9u5JYZKt7fzvKWD/7KbTFGnXEOpqAsElaDTYNOqRqh1mp87QEVPdhgAvsgJDJk76XBg7A8dJqfb3YxPsK/7LWB7YHreprf+wr7q/tat0Vj46df0+X4ocxX2xjEh8JjDVlPQXpFKmqtAop1Ls5fV3bwCZJ2pvhF5zeC7hMvlK54cmJkIz4YwOTG8zi52o1E97yI6Wc0dGmnRF+O7LRARJKJIq0= generated-by-azure",
					"metadata": {
						"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
					}
				}
			},
			"variables": {
				"vnetAddressPrefix": "10.0.0.0/16",
				"clientSubnetPrefix": "10.0.2.0/24",
				"serverSubnetPrefix": "10.0.3.0/24",
				"azureFirewallSubnetPrefix": "10.0.1.0/24",
				"azureFirewallMgmtSubnetPrefix": "10.0.4.0/24",
				"jumpboxSubnetPrefix": "10.0.0.0/24",
				"jumpboxPrivateIp": "10.0.0.4",
				"nextHopIP": "10.0.1.4",
				"azureFirewallSubnetName": "AzureFirewallSubnet",
				"jumpBoxSubnetName": "JumpboxSubnet",
				"clientSubnetName": "ClientSubnet",
				"azureFirewallMgmtSubnetName": "AzureFirewallManagementSubnet",
				"serverSubnetName": "ServerSubnet",
				"jumpBoxPublicIPAddressName": "JumpHostPublicIP",
				"jumpBoxNsgName": "JumpHostNSG",
				"jumpBoxNicName": "JumpHostNic",
				"jumpBoxSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), variables('jumpBoxSubnetName'))]",
				"clientNicName": "ClientNic",
				"clientPrivateIp": "10.0.2.4",
				"clientSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), variables('clientSubnetName'))]",
				"serverNicName": "ServerNic",
				"serverPrivateIp": "10.0.3.4",
				"serverSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), variables('serverSubnetName'))]",
				"storageAccountName": "[concat(uniquestring(resourceGroup().id), 'sajumpbox')]",
				"azfwRouteTableName": "AzfwRouteTable",
				"firewallName": "firewall1",
				"publicIPNamePrefix": "publicIP",
				"managementPublicIpName": "AzFwManagementPublicIP",
                  		"managementPublicIpId": "[resourceId('Microsoft.Network/publicIPAddresses', variables('managementPublicIpName'))]",
				"azureFirewallSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets',parameters('virtualNetworkName'), variables('azureFirewallSubnetName'))]",
				"azureFirewallMgmtSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets',parameters('virtualNetworkName'), variables('azureFirewallMgmtSubnetName'))]",
				"azureFirewallSubnetJSON": "[json(format('{{\"id\": \"{0}\"}}', variables('azureFirewallSubnetId')))]",
				"copy": [
					{
						"name": "azureFirewallIpConfigurations",
						"count": "[parameters('numberOfFirewallPublicIPAddresses')]",
						"input": {
							"name": "[concat('IpConf', copyIndex('azureFirewallIpConfigurations'))]",
							"properties": {
								"subnet": "[if(equals(copyIndex('azureFirewallIpConfigurations'), 0), variables('azureFirewallSubnetJSON'), json('null'))]",
								"publicIPAddress": {
									"id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIPNamePrefix'), add(copyIndex('azureFirewallIpConfigurations'), 1)))]"
								}
							}
						}
					}
				],
				"linuxConfiguration": {
					"disablePasswordAuthentication": true,
					"ssh": {
						"publicKeys": [
							{
								"path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
								"keyData": "[parameters('adminPasswordOrKey')]"
							}
						]
					}
				},
				"networkSecurityGroupName": "[concat(variables('clientSubnetName'), '-nsg')]"
			},
			"resources": [
				{
					"type": "Microsoft.Storage/storageAccounts",
					"name": "[variables('storageAccountName')]",
					"apiVersion": "2019-06-01",
					"location": "[parameters('location')]",
					"sku": {
						"name": "Standard_LRS"
					},
					"kind": "Storage",
					"properties": {}
				},
				{
					"type": "Microsoft.Network/routeTables",
					"name": "[variables('azfwRouteTableName')]",
					"apiVersion": "2020-05-01",
					"location": "[parameters('location')]",
					"properties": {
						"disableBgpRoutePropagation": false,
						"routes": [
							{
								"name": "AzfwDefaultRoute",
								"properties": {
									"addressPrefix": "0.0.0.0/0",
									"nextHopType": "VirtualAppliance",
									"nextHopIpAddress": "[variables('nextHopIP')]"
								}
							},
							{
								"name": "ClientNetRoute",
								"properties": {
									"addressPrefix": "10.0.2.0/24",
									"nextHopType": "VirtualAppliance",
									"nextHopIpAddress": "[variables('nextHopIP')]"
								}
							},
							{
								"name": "ServerNetRoute",
								"properties": {
									"addressPrefix": "10.0.3.0/24",
									"nextHopType": "VirtualAppliance",
									"nextHopIpAddress": "[variables('nextHopIP')]"
								}
							}
						]
					}
				},
				{
					"comments": "Simple Network Security Group for subnet [variables('clientSubnetName')]",
					"type": "Microsoft.Network/networkSecurityGroups",
					"apiVersion": "2020-05-01",
					"name": "[variables('networkSecurityGroupName')]",
					"location": "[parameters('location')]",
					"properties": {}
				},
				{
					"name": "[parameters('virtualNetworkName')]",
					"apiVersion": "2020-05-01",
					"type": "Microsoft.Network/virtualNetworks",
					"location": "[parameters('location')]",
					"dependsOn": [
						"[resourceId('Microsoft.Network/routeTables', variables('azfwRouteTableName'))]",
						"[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
					],
					"tags": {
						"displayName": "[parameters('virtualNetworkName')]"
					},
					"properties": {
						"addressSpace": {
							"addressPrefixes": [
								"[variables('vnetAddressPrefix')]"
							]
						},
						"subnets": [
							{
								"name": "[variables('jumpBoxSubnetName')]",
								"properties": {
									"addressPrefix": "[variables('jumpboxSubnetPrefix')]"
								}
							},
							{
								"name": "[variables('azureFirewallSubnetName')]",
								"properties": {
									"addressPrefix": "[variables('azureFirewallSubnetPrefix')]"
								}
							},
							{
								"name": "[variables('azureFirewallMgmtSubnetName')]",
								"properties": {
									"addressPrefix": "[variables('azureFirewallMgmtSubnetPrefix')]"
								}
							},
							{
								"name": "[variables('serverSubnetName')]",
								"properties": {
									"addressPrefix": "[variables('serverSubnetPrefix')]",
									"routeTable": {
										"id": "[resourceId('Microsoft.Network/routeTables', variables('azfwRouteTableName'))]"
									},
									"networkSecurityGroup": {
										"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
									}
								}
							},
							{
								"name": "[variables('clientSubnetName')]",
								"properties": {
									"addressPrefix": "[variables('clientSubnetPrefix')]",
									"routeTable": {
										"id": "[resourceId('Microsoft.Network/routeTables', variables('azfwRouteTableName'))]"
									},
									"networkSecurityGroup": {
										"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
									}
								}
							}
						]
					}
				},
				{
					"name": "[concat(variables('publicIPNamePrefix'), add(copyIndex(), 1))]",
					"type": "Microsoft.Network/publicIPAddresses",
					"apiVersion": "2020-05-01",
					"location": "[parameters('location')]",
					"sku": {
						"name": "Standard"
					},
					"copy": {
						"name": "publicIpCopy",
						"count": "[parameters('numberOfFirewallPublicIPAddresses')]"
					},
					"properties": {
						"publicIPAllocationMethod": "Static",
						"publicIPAddressVersion": "IPv4"
					}
				},
				{
					"type": "Microsoft.Network/publicIPAddresses",
					"apiVersion": "2019-04-01",
					"name": "[variables('managementPublicIpName')]",
					"location": "[parameters('location')]",
					"sku": {
						"name": "Standard"
					},
					"properties": {
						"publicIPAllocationMethod": "Static",
						"publicIPAddressVersion": "IPv4"
					}
				},
				{
					"name": "[variables('jumpBoxPublicIPAddressName')]",
					"type": "Microsoft.Network/publicIPAddresses",
					"apiVersion": "2020-05-01",
					"location": "[parameters('location')]",
					"properties": {
						"publicIPAllocationMethod": "Dynamic"
					}
				},
				{
					"name": "[variables('jumpBoxNsgName')]",
					"type": "Microsoft.Network/networkSecurityGroups",
					"apiVersion": "2020-05-01",
					"location": "[parameters('location')]",
					"properties": {
						"securityRules": [
							{
								"name": "myNetworkSecurityGroupRuleSSH",
								"properties": {
									"protocol": "Tcp",
									"sourcePortRange": "*",
									"destinationPortRange": "22",
									"sourceAddressPrefix": "*",
									"destinationAddressPrefix": "*",
									"access": "Allow",
									"priority": 1000,
									"direction": "Inbound"
								}
							}
						]
					}
				},
				{
					"apiVersion": "2020-05-01",
					"type": "Microsoft.Network/networkInterfaces",
					"name": "[variables('JumpBoxNicName')]",
					"location": "[parameters('location')]",
					"dependsOn": [
						"[resourceId('Microsoft.Network/publicIPAddresses', variables('jumpBoxPublicIPAddressName'))]",
						"[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
						"[resourceId('Microsoft.Network/networkSecurityGroups', variables('jumpBoxNsgName'))]"
					],
					"properties": {
						"ipConfigurations": [
							{
								"name": "ipconfig1",
								"properties": {
									"privateIPAllocationMethod": "Static",
									"privateIPAddress": "[variables('jumpboxPrivateIp')]",
									"publicIPAddress": {
										"id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('jumpBoxPublicIPAddressName'))]"
									},
									"subnet": {
										"id": "[variables('jumpBoxSubnetId')]"
									}
								}
							}
						],
						"networkSecurityGroup": {
							"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('jumpBoxNsgName'))]"
						}
					}
				},
				{
					"apiVersion": "2020-05-01",
					"type": "Microsoft.Network/networkInterfaces",
					"name": "[variables('ClientNicName')]",
					"location": "[parameters('location')]",
					"dependsOn": [
						"[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
					],
					"properties": {
						"ipConfigurations": [
							{
								"name": "ipconfig1",
								"properties": {
									"privateIPAllocationMethod": "Static",
									"privateIPAddress": "[variables('clientPrivateIp')]",
									"subnet": {
										"id": "[variables('clientSubnetId')]"
									}
								}
							}
						]
					}
				},
				{
					"apiVersion": "2020-05-01",
					"type": "Microsoft.Network/networkInterfaces",
					"name": "[variables('ServerNicName')]",
					"location": "[parameters('location')]",
					"dependsOn": [
						"[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
					],
					"properties": {
						"ipConfigurations": [
							{
								"name": "ipconfig1",
								"properties": {
									"privateIPAllocationMethod": "Static",
									"privateIPAddress": "[variables('serverPrivateIp')]",
									"subnet": {
										"id": "[variables('serverSubnetId')]"
									}
								}
							}
						]
					}
				},
				{
					"name": "JumpBox",
					"type": "Microsoft.Compute/virtualMachines",
					"apiVersion": "2019-12-01",
					"location": "[parameters('location')]",
					"dependsOn": [
						"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
						"[resourceId('Microsoft.Network/networkInterfaces', variables('JumpBoxNicName'))]"
					],
					"properties": {
						"hardwareProfile": {
							"vmSize": "[parameters('vmSize')]"
						},
						"storageProfile": {
							"imageReference": {
								"publisher": "Canonical",
								"offer": "UbuntuServer",
								"sku": "18.04-LTS",
								"version": "latest"
							},
							"osDisk": {
								"createOption": "FromImage"
							}
						},
						"osProfile": {
							"computerName": "JumpBox",
							"adminUsername": "[parameters('adminUsername')]",
							"adminPassword": "[parameters('adminPasswordOrKey')]",
							"linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
						},
						"networkProfile": {
							"networkInterfaces": [
								{
									"id": "[resourceId('Microsoft.Network/networkInterfaces', variables('JumpBoxNicName'))]"
								}
							]
						},
						"diagnosticsProfile": {
							"bootDiagnostics": {
								"enabled": true,
								"storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))).primaryEndpoints.blob]"
							}
						}
					}
				},
				{
					"name": "Client",
					"type": "Microsoft.Compute/virtualMachines",
					"apiVersion": "2019-12-01",
					"location": "[parameters('location')]",
					"dependsOn": [
						"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
						"[resourceId('Microsoft.Network/networkInterfaces', variables('ClientNicName'))]"
					],
					"properties": {
						"hardwareProfile": {
							"vmSize": "[parameters('vmSize')]"
						},
						"storageProfile": {
							"imageReference": {
								"publisher": "Canonical",
								"offer": "UbuntuServer",
								"sku": "18.04-LTS",
								"version": "latest"
							},
							"osDisk": {
								"createOption": "FromImage"
							}
						},
						"osProfile": {
							"computerName": "Server",
							"adminUsername": "[parameters('adminUsername')]",
							"adminPassword": "[parameters('adminPasswordOrKey')]",
							"linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
						},
						"networkProfile": {
							"networkInterfaces": [
								{
									"id": "[resourceId('Microsoft.Network/networkInterfaces', variables('ClientNicName'))]"
								}
							]
						},
						"diagnosticsProfile": {
							"bootDiagnostics": {
								"enabled": true,
								"storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))).primaryEndpoints.blob]"
							}
						}
					}
				},
				{
					"name": "Server",
					"type": "Microsoft.Compute/virtualMachines",
					"apiVersion": "2019-12-01",
					"location": "[parameters('location')]",
					"dependsOn": [
						"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
						"[resourceId('Microsoft.Network/networkInterfaces', variables('ServerNicName'))]"
					],
					"properties": {
						"hardwareProfile": {
							"vmSize": "[parameters('vmSize')]"
						},
						"storageProfile": {
							"imageReference": {
								"publisher": "Canonical",
								"offer": "UbuntuServer",
								"sku": "18.04-LTS",
								"version": "latest"
							},
							"osDisk": {
								"createOption": "FromImage"
							}
						},
						"osProfile": {
							"computerName": "Server",
							"adminUsername": "[parameters('adminUsername')]",
							"adminPassword": "[parameters('adminPasswordOrKey')]",
							"linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
						},
						"networkProfile": {
							"networkInterfaces": [
								{
									"id": "[resourceId('Microsoft.Network/networkInterfaces', variables('ServerNicName'))]"
								}
							]
						},
						"diagnosticsProfile": {
							"bootDiagnostics": {
								"enabled": true,
								"storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))).primaryEndpoints.blob]"
							}
						}
					}
				},
				{
					"apiVersion": "2020-04-01",
					"type": "Microsoft.Network/azureFirewalls",
					"name": "[variables('firewallName')]",
					"location": "[parameters('location')]",
					"dependsOn": [
						"[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
						"publicIpCopy"
					],
					"properties": {
						"ipConfigurations": "[variables('azureFirewallIpConfigurations')]",
						"managementIpConfiguration": {
							"name": "ManagementIpConf",
							"properties": {
								"subnet": {
									"id": "[variables('azureFirewallMgmtSubnetId')]"
								},
								"publicIPAddress": {
									"id": "[variables('managementPublicIpId')]"
								}
							}
						},
						"sku": {
                                                    "name": "AZFW_VNet",
                                                    "tier": "Basic"
                                                }
					}
				}
			]
		}
	}
}
